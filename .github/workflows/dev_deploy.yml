name: Deploy_DEV
on:
  workflow_dispatch:
  push: 
    branches: 
      - deploy


env:
  #KUBECONFIG: ${{ secrets.KUBECONFIG }}
  APP_NAME: tagion-home
  DEV_PROJECT_NAME: dev-tagion-home


jobs:
  dev_build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build_docker_image
        run: |
          ls -la
          mkdir -p ~/tagion-home
          cd ~/tagion-home
          export AWS_DEFAULT_REGION=${{ vars.AWS_DEFAULT_REGION }}
          export AWS_SECRET_ACCESS_KEY=${{ vars.AWS_SECRET_ACCESS_KEY }}
          export AWS_ACCESS_KEY_ID=${{ vars.AWS_ACCESS_KEY_ID }}
          export KUBECONFIG=${{ vars.KUBECONFIG }}
          export IMAGE_TAG=${{ vars.DOCKER_REGISTRY}}/${{ vars.DOCKER_REGISTRY}}:${{ env.GITHUB_RUN_NUMBER }}
          aws ecr get-login-password --region ${{ vars.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin ${{ vars.DOCKER_REGISTRY}}
          env | grep -i aws
          env | grep -i github
          which kubectl || echo "no kubectl"
          kubectl get ing
          #docker build -t $DOCKER_REGISTRY/$APP_NAME:$CI_PIPELINE_IID .
          #docker push $DOCKER_REGISTRY/$APP_NAME:$CI_PIPELINE_IID
  
          #dev_deploy:
          #runs-on: old
          #steps:
          #- name: Create_Container
          #run: |
          #export AWS_DEFAULT_REGION=
          #export AWS_SECRET_ACCESS_KEY=
          #export AWS_ACCESS_KEY_ID=
          #export KUBECONFIG=$KUBECONFIG
          #export IMAGE_TAG=$DOCKER_REGISTRY/$APP_NAME:$CI_PIPELINE_IID
          #kubectl delete deploy $DEV_PROJECT_NAME || kubectl get deploy
          #envsubst < k8s/dev_deployment.yml | kubectl apply -f -
